buildscript {
    repositories {
        maven {
            url "${rootDir}/extras/multiapk-plugin/uploadedArchives"
        }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.mlibrary:multiapk-plugin:0.0.1'
        classpath 'com.android.tools.build:gradle:2.2.3'
        classpath 'com.antfortune.freeline:gradle:0.8.1'
        classpath 'com.meituan.android.walle:plugin:1.1.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        //classpath 'com.squareup.sqldelight:gradle-plugin:0.6.1' // wait for support rxjava2
    }
}

apply plugin: 'android-reporting'
//apply plugin: 'com.squareup.sqldelight' // wait for support rxjava2

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            // All of React Native (JS, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
    }

    /*  详细打印
    注: 某些输入文件使用或覆盖了已过时的 API。
    注: 有关详细信息, 请使用 -Xlint:deprecation 重新编译。
    注: 某些输入文件使用了未经检查或不安全的操作。
    注: 有关详细信息, 请使用 -Xlint:unchecked 重新编译。
    */
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }

    tasks.withType(Javadoc) {
        options.encoding = "UTF-8"
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Define versions in a single place
ext {
    // Sdk and tools
    minSdkVersion = 18
    targetSdkVersion = 25
    compileSdkVersion = 25
    buildToolsVersion = '25.0.2'

    // App dependencies
    supportLibraryVersion = '25.3.1'
    multidex = '1.0.1'
    guavaVersion = '22.0-android'
    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    dexmakerVersion = '1.2'
    powerMockito = '1.6.2'
    hamcrestVersion = '1.3'
    runnerVersion = '0.5'
    rulesVersion = '0.5'
    espressoVersion = '2.2.2'
    rxjavaVersion = '2.1.0'
    rxandroidVersion = '2.0.1'
    rxpermissionsVersion = '0.9.4@aar'
    rxlifecycleVersion = '2.0.1'
    rxbindingVersion = '2.0.0'
    sqlbriteVersion = '1.1.1'
    frescoVersion = '1.3.0'
    retrofitVersion = '2.3.0'
    retrofit2rxjava2Version = '1.0.0'
    reactnativeVersion = '0.40.0'

    //others
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    solidMode = false
    solidModeConfigValue = properties.getProperty('solidMode')
    if ('true'.equalsIgnoreCase(solidModeConfigValue))
        solidMode = true
    else if ('false'.equalsIgnoreCase(solidModeConfigValue))
        solidMode = false

    bintrayUser = properties.getProperty('bintray.user')
    bintrayKey = properties.getProperty('bintray.apikey')
}